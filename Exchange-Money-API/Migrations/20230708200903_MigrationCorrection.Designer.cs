// <auto-generated />
using System;
using Exchange_Money_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exchange_Money_API.Migrations
{
    [DbContext(typeof(ExchangeMoneyContext))]
    [Migration("20230708200903_MigrationCorrection")]
    partial class MigrationCorrection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exchange_Money_API.Models.AcreedorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Acreedores");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.AhorroEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Moneda_id")
                        .HasColumnType("int");

                    b.Property<int>("Objetivo_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAhorro")
                        .HasColumnType("decimal(12,4)");

                    b.HasKey("Id");

                    b.HasIndex("Moneda_id");

                    b.HasIndex("Objetivo_id");

                    b.HasIndex("User_id");

                    b.ToTable("Ahorros");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.DeudaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Acreedor_id")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDeuda")
                        .HasColumnType("decimal(12,4)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Acreedor_id");

                    b.HasIndex("User_id");

                    b.ToTable("Deudas");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.EgresoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Moneda_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Seller_id")
                        .HasColumnType("int");

                    b.Property<int>("Tipo_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorEgreso")
                        .HasColumnType("decimal(12,4)");

                    b.HasKey("Id");

                    b.HasIndex("Moneda_id");

                    b.HasIndex("Seller_id");

                    b.HasIndex("Tipo_id");

                    b.HasIndex("User_id");

                    b.ToTable("Egresos");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.IngresoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("Moneda_id")
                        .HasColumnType("int");

                    b.Property<int>("Tipo_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorIngreso")
                        .HasColumnType("decimal(12,4)");

                    b.HasKey("Id");

                    b.HasIndex("Moneda_id");

                    b.HasIndex("Tipo_id");

                    b.HasIndex("User_id");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.MonedaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameMoneda")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Divisas");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.ObjetivoAhorroEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Objetivos");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.SellersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSeller")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoSeller_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoSeller_id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.TipoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NameTipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TipoTransaccion")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.TipoSellerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameTipoSeller")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoSellers");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Role_id")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.AhorroEntity", b =>
                {
                    b.HasOne("Exchange_Money_API.Models.MonedaEntity", "Divisa")
                        .WithMany()
                        .HasForeignKey("Moneda_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.ObjetivoAhorroEntity", "Objetivos")
                        .WithMany("Ahorros")
                        .HasForeignKey("Objetivo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.UserEntity", "Users")
                        .WithMany("Ahorros")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Divisa");

                    b.Navigation("Objetivos");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.DeudaEntity", b =>
                {
                    b.HasOne("Exchange_Money_API.Models.AcreedorEntity", "Acreedores")
                        .WithMany("Deudas")
                        .HasForeignKey("Acreedor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.UserEntity", "Users")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acreedores");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.EgresoEntity", b =>
                {
                    b.HasOne("Exchange_Money_API.Models.MonedaEntity", "Divisa")
                        .WithMany("Egresos")
                        .HasForeignKey("Moneda_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.SellersEntity", "Sellers")
                        .WithMany("Egresos")
                        .HasForeignKey("Seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.TipoEntity", "Tipos")
                        .WithMany("Egresos")
                        .HasForeignKey("Tipo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.UserEntity", "User")
                        .WithMany("Egresos")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Divisa");

                    b.Navigation("Sellers");

                    b.Navigation("Tipos");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.IngresoEntity", b =>
                {
                    b.HasOne("Exchange_Money_API.Models.MonedaEntity", "Divisas")
                        .WithMany("Ingresos")
                        .HasForeignKey("Moneda_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.TipoEntity", "Tipos")
                        .WithMany("Ingresos")
                        .HasForeignKey("Tipo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange_Money_API.Models.UserEntity", "Users")
                        .WithMany("Ingresos")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Divisas");

                    b.Navigation("Tipos");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.SellersEntity", b =>
                {
                    b.HasOne("Exchange_Money_API.Models.TipoSellerEntity", "TipoSellers")
                        .WithMany("Sellers")
                        .HasForeignKey("TipoSeller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoSellers");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.UserEntity", b =>
                {
                    b.HasOne("Exchange_Money_API.Models.RoleEntity", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.AcreedorEntity", b =>
                {
                    b.Navigation("Deudas");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.MonedaEntity", b =>
                {
                    b.Navigation("Egresos");

                    b.Navigation("Ingresos");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.ObjetivoAhorroEntity", b =>
                {
                    b.Navigation("Ahorros");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.SellersEntity", b =>
                {
                    b.Navigation("Egresos");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.TipoEntity", b =>
                {
                    b.Navigation("Egresos");

                    b.Navigation("Ingresos");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.TipoSellerEntity", b =>
                {
                    b.Navigation("Sellers");
                });

            modelBuilder.Entity("Exchange_Money_API.Models.UserEntity", b =>
                {
                    b.Navigation("Ahorros");

                    b.Navigation("Egresos");

                    b.Navigation("Ingresos");
                });
#pragma warning restore 612, 618
        }
    }
}
